#BlueJ class context
comment0.target=Admin
comment0.text=\ \r\n\ \ \ \ Admin\ class\ is\ a\ subclass\ of\ Person.\ It\ inherits\ variables\ of\ account\ data\ such\ as\ username,\ name,\ password,\ email,\r\n\ \ \ \ phoneNumber,\ account\ type.\ It\ also\ inherits\ methods\ such\ as\ setters,\ getters,\ addProperty()\ and\ deleteProperty().\ \ \r\n
comment1.params=
comment1.target=Admin()
comment10.params=propertyID
comment10.target=void\ deleteComment(int)
comment10.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ for\ deleting\ comment\ txt\ file\ when\ property\ is\ deleted.\ Comment\ file\ located\ inside\ folder\ "comments"\r\n\ \ \ \ is\ deleted\ if\ exist.\r\n
comment11.params=tenantToAdd
comment11.target=void\ addTenant(Tenant)
comment11.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ add\ tenant\ account\ when\ registration\ is\ approved\ \ \r\n
comment12.params=ownerToAdd
comment12.target=void\ addOwner(Owner)
comment12.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ add\ owner\ account\ when\ registration\ is\ approved\ \r\n
comment13.params=agentToAdd
comment13.target=void\ addAgent(Agent)
comment13.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ add\ agent\ account\ when\ registration\ is\ approved\r\n
comment14.params=adminToAdd
comment14.target=void\ addAdmin(Admin)
comment14.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ add\ admin\ account\ when\ registration\ is\ approved\r\n
comment15.params=index
comment15.target=void\ deleteRequest(int)
comment15.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ delete\ registration\ request.\ It\ is\ used\ after\ both\ approved\ and\ declined\ condition.\r\n
comment16.params=
comment16.target=void\ readAllAccounts()
comment16.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ combine\ all\ user\ accounts\ into\ single\ arraylist\ for\ displaying\ user\ accounts.\r\n\ \ \ \ The\ list\ is\ sorted\ in\ alphabetical\ order\ of\ user's\ name.\r\n
comment17.params=p1\ p2
comment17.target=int\ compare(Person,\ Person)
comment18.params=index
comment18.target=void\ deleteTenant(int)
comment18.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ delete\ tenant\ account.\ The\ index\ for\ all\ userAccounts\ is\ passed,\ so\ it\ needs\ to\ compare\ and\ search\r\n\ \ \ \ matched\ tenant\ by\ ussername.\ After\ tenant\ is\ removed,\ it\ is\ also\ removed\ from\ userAccounts\ list.\r\n
comment19.params=index
comment19.target=void\ deleteOwner(int)
comment19.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ delete\ owner\ account.\ The\ index\ for\ all\ userAccounts\ is\ passed,\ so\ it\ needs\ to\ compare\ and\ search\r\n\ \ \ \ matched\ owner\ by\ ussername.\ After\ owner\ is\ removed,\ it\ is\ also\ removed\ from\ userAccounts\ list.\r\n
comment2.params=username\ name\ pwd\ email\ phoneNumber\ accType
comment2.target=Admin(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ This\ is\ a\ constructor\ used\ for\ account\ resgiatration,\ also\ used\ when\ reading\ admin\ from\ csv\ file\ \r\n
comment20.params=index
comment20.target=void\ deleteAgent(int)
comment20.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ delete\ agent\ account.\ The\ index\ for\ all\ userAccounts\ is\ passed,\ so\ it\ needs\ to\ compare\ and\ search\r\n\ \ \ \ matched\ agent\ by\ ussername.\ After\ agent\ is\ removed,\ it\ is\ also\ removed\ from\ userAccounts\ list.\r\n
comment21.params=index
comment21.target=void\ deleteAdmin(int)
comment21.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ delete\ admin\ account.\ The\ index\ for\ all\ userAccounts\ is\ passed,\ so\ it\ needs\ to\ compare\ and\ search\r\n\ \ \ \ matched\ admin\ by\ ussername.\ After\ admin\ is\ removed,\ it\ is\ also\ removed\ from\ userAccounts\ list.\r\n
comment22.params=index
comment22.target=void\ deleteAccount(int)
comment22.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ delete\ account.\ It\ first\ get\ all\ user\ accounts\ regardless\ of\ account\ type.\r\n\ \ \ \ Then,\ it\ deletes\ account\ after\ validating\ the\ account\ type\ by\ instance.\r\n
comment23.params=user
comment23.target=int\ getIndex(Person)
comment24.params=searchResult\ properties
comment24.target=void\ saveReport(java.util.ArrayList,\ java.util.ArrayList)
comment24.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ to\ save\ report\ of\ properties\ by\ admin.\ The\ parameter\ get\ searchResult\ of\ properties\ in\ homepage\ and\ \r\n\ \ \ \ the\ list\ of\ properties\ without\ search.\ Report\ class\ is\ initialized.\r\n
comment25.params=
comment25.target=Report\ getReport()
comment25.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Return\ report\ generated\r\n
comment26.params=
comment26.target=java.lang.String\ toString()
comment26.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ toString()\ method\ is\ overrided\ to\ arrange\ admin\ account\ data\ into\ a\ comma\ delimited\ string\ to\ save\ in\ csv\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getUserAccounts()
comment3.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Method\ that\ return\ all\ users'\ data\ in\ Person\ object\ \r\n
comment4.params=projectType\ propertyType\ propertyName\ address\ size\ rentPrice\ rentRate\ numOfRoom\ numOfBathroom\ ownedBy\ status\ state\ facilities
comment4.target=void\ addProperty(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ int,\ int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.ArrayList)
comment4.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling,\ Nurshara\ Batrisyia\r\n\r\n\ \ \ \ A\ method\ for\ adding\ a\ property.\ All\ data\ are\ passed\ by\ parameter.\ The\ propertyID\ is\ obtained\ by\ getting\ current\ \r\n\ \ \ \ last\ ID\ in\ the\ file\ and\ add\ by\ 1.\ addFacilities()\ method\ is\ called\ for\ adding\ facilities\ in\ another\ file.\r\n
comment5.params=facilityToAdd
comment5.target=void\ addFacilities(java.util.ArrayList)
comment5.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ for\ adding\ facilities\ of\ a\ property.\ Since\ ArrayList\ of\ facilities\ is\ passed,\ it\ is\ converted\ into\r\n\ \ \ \ array\ to\ match\ the\ write\ file\ method.\r\n
comment6.params=propertyID
comment6.target=void\ deleteProperty(int)
comment6.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ for\ deleting\ a\ property.\ It\ compares\ propertyID\ of\ delete\ with\ all\ properties,\ remove\ the\ Property\ object\r\n\ \ \ \ when\ propertyID\ is\ found.\ It\ also\ call\ deleteFacilities(),\ deletePhotos()\ and\ deleteComment()\ as\ to\ completely\ \r\n\ \ \ \ delete\ the\ property\ data.\ \r\n
comment7.params=propertyID
comment7.target=void\ deleteFacilities(int)
comment7.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ for\ deleting\ facilities\ of\ a\ property.\ It\ compares\ propertyID\ in\ String\ because\ Array\ of\ String\ is\ used.\r\n\ \ \ \ When\ the\ targeted\ propertyID\ is\ found\ at\ the\ first\ index,\ the\ array\ of\ String\ is\ removed.\r\n
comment8.params=propertyID
comment8.target=void\ deletePhotos(int)
comment8.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ method\ for\ deleting\ property\ images.\ When\ property\ is\ deleted,\ image\ is\ also\ deleted.\r\n\ \ \ \ FilenameFilter\ is\ used\ to\ search\ images\ of\ targeted\ property,\ which\ starts\ with\ "propertyID_",\ delete\ image\r\n\ \ \ \ by\ getting\ absolute\ path\ of\ propertyImage\ folder.\r\n
comment9.params=dir\ name
comment9.target=boolean\ accept(java.io.File,\ java.lang.String)
numComments=27
