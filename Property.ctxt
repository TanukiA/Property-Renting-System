#BlueJ class context
comment0.target=Property
comment0.text=\r\n\ \ \ \ Property\ has\ many\ data\ such\ as\ size,\ propertyTyoe,\ address,\ status\ and\ so\ on.\r\n\ \ \ \ propertyID\ is\ considered\ unique\ in\ file\ to\ determine\ the\ property.\r\n\ \ \ \ Each\ property\ also\ has\ an\ arraylist\ of\ String\ for\ comments.\r\n\ \ \ \ Contains\ methods\ for\ filter\ functions\ (Search\ feature)\r\n
comment1.params=propertyID\ projectType\ propertyType\ propertyName\ address\ size\ rentPrice\ rentRate\ numOfRoom\ numOfBathroom\ ownedBy\ status\ state
comment1.target=Property(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ int,\ int,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ A\ contructor\ used\ for\ adding\ property,\ editing\ property\ and\ so\ on,\ with\ all\ the\ necessary\ data\r\n
comment10.params=rentRate
comment10.target=void\ setRentRate(double)
comment10.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ rental\ price\ of\ property\r\n
comment11.params=numOfRoom
comment11.target=void\ setNumOfRoom(int)
comment11.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ number\ of\ room\ of\ property\r\n
comment12.params=numOfBathroom
comment12.target=void\ setNumOfBathroom(int)
comment12.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ number\ of\ bathroom\ of\ property\r\n
comment13.params=ownedBy
comment13.target=void\ setOwnedBy(java.lang.String)
comment13.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ owner/agent\ who\ own\ the\ property\ in\ system\r\n
comment14.params=status
comment14.target=void\ setStatus(java.lang.String)
comment14.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ status\ of\ property\ (Active/Inactive)\r\n
comment15.params=state
comment15.target=void\ setState(java.lang.String)
comment15.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ state\ of\ property\ (Activated/Deactivated)\r\n
comment16.params=username
comment16.target=void\ setContactInfo(java.lang.String)
comment16.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Set\ contact\ info\ of\ owner/agent\ to\ be\ displayed\ in\ propertyDetail\ page.\r\n\ \ \ \ Include\ phone\ number,\ email\ and\ name\ of\ owner/agent\r\n
comment17.params=
comment17.target=int\ getPropertyID()
comment17.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ propertyID\r\n
comment18.params=
comment18.target=java.lang.String\ getPropertyType()
comment18.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ property\ type\r\n
comment19.params=
comment19.target=java.lang.String\ getProjectType()
comment19.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ project\ type\r\n
comment2.params=username
comment2.target=Property(java.lang.String)
comment2.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ A\ constructor\ to\ be\ callled\ by\ propertyDetail\ page,\ it\ is\ to\ set\ contact\ info\ specifically\ for\r\n\ \ \ \ the\ property\ detail\ page\r\n
comment20.params=
comment20.target=java.lang.String\ getPropertyName()
comment20.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ property\ name\r\n
comment21.params=
comment21.target=java.lang.String\ getAddress()
comment21.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ address\ of\ property\r\n
comment22.params=
comment22.target=int\ getSize()
comment22.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ size\ of\ property\r\n
comment23.params=
comment23.target=double\ getRentPrice()
comment23.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ rental\ price\ property\r\n
comment24.params=
comment24.target=double\ getRentRate()
comment24.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ rental\ rate\ of\ property\r\n
comment25.params=
comment25.target=int\ getNumOfRoom()
comment25.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ number\ of\ room\ of\ property\r\n
comment26.params=
comment26.target=int\ getNumOfBathroom()
comment26.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ number\ of\ bathroom\ of\ property\r\n
comment27.params=
comment27.target=java.lang.String\ getOwnedBy()
comment27.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ owner\ or\ agent\ who\ own\ the\ property\ in\ system\r\n
comment28.params=
comment28.target=java.lang.String\ getStatus()
comment28.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ state\ of\ property\r\n
comment29.params=
comment29.target=java.lang.String\ getState()
comment29.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Get\ state\ of\ property\r\n
comment3.params=propertyID
comment3.target=void\ setPropertyID(int)
comment3.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ propertyID\r\n
comment30.params=
comment30.target=java.lang.String\ getNameToContact()
comment30.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Get\ the\ name\ to\ contact\ (for\ propertyDetail\ page)\r\n
comment31.params=
comment31.target=java.lang.String\ getContactNum()
comment31.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Get\ contact\ number\ of\ owner/agent\ of\ property\r\n
comment32.params=
comment32.target=java.lang.String\ getEmail()
comment32.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Get\ email\ addres\ of\ the\ owner/agent\ of\ property\r\n
comment33.params=
comment33.target=java.util.ArrayList\ filterActivated()
comment33.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ that\ are\ in\ "Activated"\ state\ (can\ be\ browsed\ by\ tenants)\r\n
comment34.params=type
comment34.target=java.util.ArrayList\ filterType(java.lang.String)
comment34.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ with\ specific\ property\ type\r\n
comment35.params=owner
comment35.target=java.util.ArrayList\ filterOwner(java.lang.String)
comment35.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ with\ specific\ owner\r\n
comment36.params=status
comment36.target=java.util.ArrayList\ filterStatus(java.lang.String)
comment36.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ with\ specific\ status\r\n
comment37.params=project
comment37.target=java.util.ArrayList\ filterProject(java.lang.String)
comment37.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ with\ specific\ project\r\n
comment38.params=selectedFacilities
comment38.target=java.util.ArrayList\ filterFacility(java.util.ArrayList)
comment38.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ with\ specific\ facilities(if\ any\ one\ of\ the\ facilities\ match,\ is\ included)\r\n
comment39.params=min\ max
comment39.target=java.util.ArrayList\ filterRentalRate(double,\ double)
comment39.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Filter\ and\ return\ properties\ with\ specific\ range\ of\ rental\ rate\r\n
comment4.params=propertyType
comment4.target=void\ setPropertyType(java.lang.String)
comment4.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ propertyType\r\n
comment40.params=unsorted
comment40.target=java.util.ArrayList\ sortACS_price(java.util.ArrayList)
comment40.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Sort\ the\ rental\ price\ in\ ascending\ order\r\n
comment41.params=unsorted
comment41.target=java.util.ArrayList\ sortDESC_price(java.util.ArrayList)
comment41.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Sort\ the\ rental\ price\ in\ descending\ order\r\n
comment42.params=p1\ p2
comment42.target=int\ compare(Property,\ Property)
comment43.params=p1\ p2
comment43.target=int\ compare(Property,\ Property)
comment44.params=propertyID
comment44.target=Property\ getPropertyByID(int)
comment44.text=\r\n\ Author\:\ Lew\ Zi\ Xuan\ \r\n\r\n\ This\ method\ return\ a\ property\ object\ by\ property\ id.\r\n\ Search\ through\ the\ static\ arraylist\r\n\ if\ there\ is\ match,\ return\ the\ property.\r\n\ else\ return\ null\r\n
comment45.params=
comment45.target=void\ readComments()
comment45.text=\ \r\n\ \ \ \ Author\:\ Lew\ Zi\ Xuan\r\n\r\n\ \ \ \ Read\ the\ property's\ comments\ into\ ArrayList,\ get\ by\ propertyID\r\n
comment46.params=
comment46.target=java.util.ArrayList\ getComments()
comment46.text=\ \r\n\ \ \ \ Author\:\ Lew\ Zi\ Xuan\r\n\r\n\ \ \ \ Get\ comments\ read\ by\ a\ property\r\n
comment47.params=obj
comment47.target=boolean\ equals(java.lang.Object)
comment47.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Override\ equals()\ method\ to\ compare\ Property\ objects.\r\n\ \ \ \ Used\ by\ retainAll()\ that\ involve\ comparing\ to\ obtain\ the\ common\ objects\ between\ 2\ ArrayList\ of\ \r\n\ \ \ \ Property\ objects\r\n
comment48.params=
comment48.target=java.lang.String\ toString()
comment48.text=\ \r\n\ \ \ \ Author\:\ Adeline\ Fong\ Li\ Ling\r\n\r\n\ \ \ \ Override\ toString()\ method\ to\ arrange\ for\ comma-delimited\ property\ data\ to\ be\ saved\ in\ csv\r\n
comment5.params=projectType
comment5.target=void\ setProjectType(java.lang.String)
comment5.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ project\ type\r\n
comment6.params=propertyName
comment6.target=void\ setPropertyName(java.lang.String)
comment6.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ property\ name\r\n
comment7.params=address
comment7.target=void\ setAddress(java.lang.String)
comment7.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ address\ of\ property\r\n
comment8.params=size
comment8.target=void\ setSize(int)
comment8.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ size\ of\ property\r\n
comment9.params=rentPrice
comment9.target=void\ setRentPrice(double)
comment9.text=\ \r\n\ \ \ \ Author\:\ Pavitra\r\n\r\n\ \ \ \ Set\ rental\ price\ of\ property\r\n
numComments=49
